name: Build Binaries

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23'  # Correct Go version format

      - name: Build binaries
        run: |
          cd cmd/varunastra  # Navigate to the correct directory
          
          # Build for Linux
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            if [[ "${{ matrix.arch }}" == "amd64" ]]; then
              GOOS=linux GOARCH=amd64 go build -o varunastra .
              zip varunastra_linux_amd64.zip varunastra
            elif [[ "${{ matrix.arch }}" == "arm64" ]]; then
              GOOS=linux GOARCH=arm64 go build -o varunastra .
              zip varunastra_linux_arm64.zip varunastra
            fi
          fi

          # Build for macOS
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            if [[ "${{ matrix.arch }}" == "amd64" ]]; then
              GOOS=darwin GOARCH=amd64 go build -o varunastra .
              zip varunastra_darwin_amd64.zip varunastra
            elif [[ "${{ matrix.arch }}" == "arm64" ]]; then
              GOOS=darwin GOARCH=arm64 go build -o varunastra .
              zip varunastra_darwin_arm64.zip varunastra
            fi
          fi

  upload:
    runs-on: ubuntu-latest  # Can be any OS; it will only upload if builds succeed
    needs: build  # Ensure this job runs only after the build jobs are complete
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.release.tag_name }}  
          files: |
            ${{github.workspace}}/cmd/varunastra/varunastra_linux_amd64.zip
            ${{github.workspace}}/cmd/varunastra/varunastra_linux_arm64.zip
            ${{github.workspace}}/cmd/varunastra/varunastra_darwin_amd64.zip
            ${{github.workspace}}/cmd/varunastra/varunastra_darwin_arm64.zip
